services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # Example custom templating helper
    # AppBundle\Templating\Helper\Example:
    #     # templating helpers need to be public as they
    #     # are fetched from the container on demand
    #     public: true
    #     tags:
    #         - { name: templating.helper, alias: fooBar }

    # Example event listener for objects
    # AppBundle\EventListener\TestListener:
    #     tags:
    #         - { name: kernel.event_listener, event: pimcore.dataobject.preUpdate, method: onObjectPreUpdate }

    #    payum.stripe_checkout_gateway_factory:
    #        class: Payum\Core\Bridge\Symfony\Builder\GatewayFactoryBuilder
    #        arguments: [AppBundle\PayumStripe\StripeCheckoutSessionGatewayFactory]
    #        tags:
    #            - {name: payum.gateway_factory_builder, factory: stripe_checkout }

    app.coreshop.checkout.stripe_payment:
        class: AppBundle\CheckoutStep\PaymentCheckoutStep
        arguments: []

#    app.stripe_js_gateway_factory:
#        class: Payum\Core\Bridge\Symfony\Builder\GatewayFactoryBuilder
#        arguments: [AppBundle\CheckoutGateway\Stripe\StripeGatewayFactory]
#        tags:
#            - { name: payum.gateway_factory_builder, factory: stripe_js }


#    app.form.type.gateway_configuration.stripe_js:
#        class: AppBundle\Form\Type\StripeJs\StripeJsGatewayConfigurationType
#        tags:
#            - { name: coreshop.gateway_configuration_type, type: stripe_js }
#            - { name: form.type }

    AppBundle\Form\Type\Checkout\PaymentType:
        arguments:
            - '%coreshop.model.cart.class%'
            - '%coreshop.form.type.checkout.payment.validation_groups%'
            - '@coreshop.form_registry.payment.settings'
            - '@coreshop.repository.payment_provider'
            - '%coreshop.gateway_factories%'
        tags:
            - {name: form.type}

#    Payum\Core\Payum:
#        alias: payum

#    payum:
#        class: Payum\Core\Payum
#        public: true
#        factory: ['@payum.builder', 'getPayum']
#
#    payum.static_registry:
#        class: Payum\Core\Bridge\Symfony\ContainerAwareRegistry
#        arguments: ['collection', 'collection', 'collection']
#        calls: [setContainer, ['@service_container']]

#    app.capture_controller:
#        class: AppBundle\Controller\CaptureController
#        arguments: ['@payum', '@coreshop.context.cart']
